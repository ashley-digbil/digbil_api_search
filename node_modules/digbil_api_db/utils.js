'use strict';

// return a unix timestamp for UTC
// comes from modules/utils/common in the api_resources project.
// I put that here to avoid a circular dependency (since the resources
// require this project). This should be refactored later
module.exports.get_now_utc = function() {
    var now = new Date();
    var now_utc = new Date(
            now.getUTCFullYear(),
            now.getUTCMonth(),
            now.getUTCDate(),
            now.getUTCHours(),
            now.getUTCMinutes(),
            now.getUTCSeconds()
            );
    return now_utc.getTime();
}

module.exports.objectIdFromDate = function objectIdFromDate(date) {
    var hexSeconds = Math.floor(date.getTime()/1000).toString(16);
    var constructedObjectId = ObjectId(hexSeconds + "0000000000000000");
    return constructedObjectId;
}

module.exports.getDateFromId = function getDateFromId(id) {
    var ts = String(id).slice(0,8);
    return new Date(parseInt(ts, 16) * 1000);
}

// given an hrtime array [s, ns], return a human readable string
// prettyHrtime([10, 2]) -> 10s
// prettyHrtime([1, 2]) -> 1s 2ns
// prettyHrtime([0, 3e8]) -> 300ms
module.exports.prettyHrtime = function prettyHrtime(t) {
  var s = t[0];
  var ns = t[1];
  var res = '';
  if(s >= 10) res += s+'s ';

  if(ns > 1e6) {
    var milis = Math.round(ns*1e-6);
    if(s < 10) milis = milis+s*1000;
    res = milis+'ms';
  } else {
    if(s) res = s+'s ';

    if(ns > 1e3) {
      var micro = Math.round(ns*1e-3);
      res += micro+'Âµs';
    } else {
      res += ns+'ns';
    }

  }
  return res
}
