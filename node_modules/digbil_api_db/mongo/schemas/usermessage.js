/**
 * @author Renaud Sauvain
 */

/**
 * Exports schema
 */
module.exports.load = function(mg) {
	var Schema = mg.Schema;
	/**
	 * @deprecated
	 */
	var message = new Schema({
		'cdate' : {
			type : Date,
			'default' : Date.now
		},
		'from' : {
			'user' : {
				type : Schema.Types.ObjectId,
				ref : 'userprofile',
				index : true
			},
			'folder' : {
				type : String,
				lowercase : true,
				trim : true
			},
			'stat' : {
				type : Number,
				'default' : 0
			},
		},
		'to' : {
			'user' : {
				type : Schema.Types.ObjectId,
				ref : 'userprofile',
				index : true
			},
			'folder' : {
				type : String,
				lowercase : true,
				trim : true
			},
			'stat' : {
				type : Number,
				'default' : 0
			}
		},
		'subject' : {
			type : String,
			trim : true
		},
		'msg' : {
			type : String,
			trim : true
		},
		'isread' : Boolean,
		'tags' : [ {
			type : String,
			lowercase : true,
			trim : true
		} ]
	});

	var msg = new Schema({
		'cdate' : {
			type : Date,
			'default' : Date.now
		},
		'from' : {
			type : Schema.Types.ObjectId,
			ref : 'userprofile'
		},
		'msg' : String
	});

	var mrb = new Schema({
		'user' : {
			type : Schema.Types.ObjectId,
			ref : 'userprofile',
			index : true
		},
		// 'folder' : String,
		'stat' : {
			type : Number,
			'default' : 0,
		// Standing for
		// Normal/Marked/Deleted
		},
		'ddate' : Date,
		'isread' : {
			type : Boolean,
			'default' : false
		}
	});

	var conversation = new Schema({
		'last_update' : {
			type : Date,
			'default' : Date.now
		},
		'subject' : {
			type : String,
			trim : true
		},
		'tags' : [ {
			type : String,
			lowercase : true,
			trim : true
		} ],
		'members' : [ mrb ],
		'messages' : [ msg ],
	});
	conversation.virtual('last_msg').get(function() {
		if (!this.messages || this.messages.length == 0)
			return null;
		// get last message time
		var i = 0;
		for ( var m_i = 0, len = this.messages.length; m_i < len; m_i++)
			if (this.messages[m_i].cdate > this.messages[i].cdate)
				i = m_i;
		return this.messages[i];
	});
	return conversation;
};
