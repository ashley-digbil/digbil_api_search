/**
 * @author Renaud Sauvain		
 */
/**
 * Module dependencies.
 */

var _general = require('./_general');

module.exports.load = function(mg) {
	var Schema = mg.Schema;
	var Address_e = new _general.Address_e();

	var ops = new Schema({
		'ts' : {
			type : Date,
			'default' : Date.now
		},
		'comment' : {
			type : String,
			trim : true
		},
		"optype" : {
			type : Number
		},
		"issuer" : {
			"service" : String, // fe-mcs
			"privip" : String,
			"pubip" : String,
			"host" : String,
			"user" : {
				type : Schema.Types.ObjectId,// 
				ref : 'userprofile'
			}
		}
	});

	var image = new Schema({
		"cdate" : {
			type : Date,
			"default" : Date.now
		},
		"files" : [ {
			"url" : String,
			"res" : {
				"w" : Number,
				"h" : Number
			}
		} ],
		"isdef" : Boolean,
		"ddate" : Date
	});

	/* Campaign param */
	var Billboard = new Schema({
		'name' : [ {
			'lan' : String, // ISO 639-3
			'name' : {
				type : String,
				trim : true
			}
		} ],
		'ts' : {
			type : Date,
			'default' : Date.now
		},
		'cdate' : {
			type : Date,
			'default' : Date.now
		},
		'ddate' : Date,
		'user' : {
			type : Schema.Types.ObjectId,
			ref : 'userprofile',
			index : true
		},

		"dsmodel" : {
			type : Schema.Types.ObjectId,
			ref : 'dsmodel',
			index : true
		},
		'host' : {
			'dsimage' : {
				type : Schema.Types.ObjectId,
				ref : 'dsimage'
			},
			'mac' : [ {
				type : String
			} ],
			'cpu_id' : {
				type : String
			},
			'mb_id' : {
				type : String
			},
			'serial' : {
				type : String
			},
			'k_ts' : Date,
			'keys' : {
				type : [ {
					type : Schema.Types.ObjectId,
					ref : 'key'
				} ],
				set : function(data) {
					this.host.k_ts = Date.now();
					return data;
				}
			},
			'pup_fingerprint' : String
		},
		"image" : [ image ],

		"settings" : {
			"ws" : {
				"ts" : {
					type : Date
				}
			}
		},
		'ops' : [ ops ],
		'stat' : {
			type : Number,
			'default' : 01
		},

		"config" : {
			"layout" : {
				type : Schema.Types.ObjectId,
				ref : 'layout'
			},
			"layout_name" : {
				type : String
			},
			"optime_start" : {
				type : String
			},
			"optime_end" : {
				type : String
			},
			"screen_on" : {
				type : String
			},
			"screen_off" : {
				type : String
			},
			"rotation" : {
				type : String
			},
			"volume" : {
				type : Number
			},
			"touch_enable" : {
				type : Boolean
			},
			'player_environment' : {
				type : String
			}
		},
        'entity' : {
            type : Schema.Types.ObjectId,
            ref : 'entities'
        },
        'location': {
            type: Schema.Types.ObjectId,
            ref: 'locations'
        },
        'signtype': {
            type: Schema.Types.ObjectId,
            ref: 'signtypes'
        }
	});
	Billboard.virtual('def_image').get(function() {
		/* get default : the last one will be chosen as default one */
		var def = null;
		if (this.image)
			for ( var e_i = 0; e_i < this.image.length; e_i++) {
				def = this.image[e_i];
				if (this.image[e_i].isdef)
					break;
			}
		return def;
	});
	Billboard.virtual('host.hostname').get(function() {
		return this.dsmodel + "_" + this._id;
	});
	// function venue_type_set(v) {
	// this.name = (typeof this._id != 'undefined'?(this._id.toString().substr(-4) + '_'):'') + (this.venue.address != 'undefined' && this.venue.address.street
	// != 'undefined'?this.venue.address.street.join(' ').replace(/\s+/g,'-'):'') + '_' + v;
	// return v;
	// };

	Billboard.index({
		'venue.address.gps.addr' : "2d"
	});
	Billboard.set('versionKey', false);
	return Billboard;
};
