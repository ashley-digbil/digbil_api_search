/**
 * @author Renaud Sauvain
 */

/**
 * Exports schema
 */
module.exports.load = function(mg) {
	var Schema = mg.Schema;
	var schema = new Schema({
		'ts' : {
			type : Date,
			'default' : Date.now
		}, // <int, Timestamp of last update>,
		'type' : {
			type : String,
			enum : [ 'campaign','layout', 'cmd' ]
		},
		'_data' : String, // serialize JSON object
		'ds' : {
			type : Schema.Types.ObjectId,
			ref : 'billboard',
			index : true
		}, // String <Mongo Object ID>
		'ack' : [ String ]
	// host which successfully handle the message
	});
	schema.virtual('data').get(function() {
		if (this._data)
			return (this._data) ? JSON.parse(this._data) : null;
	});
	schema.virtual('data').set(function(data) {
		if (data && typeof data == 'object')
			this._data = JSON.stringify(data);
	});
	return schema;
};
