/**
 * @author renaudsauvain
 * 
 * Module dependencies.
 */

/**
 * Exports schema
 */

var oplog_schema = require('./oplog');
var nowUtc = require('../../utils').get_now_utc;
var dateUtc = function() { return new Date(nowUtc()); }
var _ = require('lodash');
var transcodingSchema = require('./_transcoding');

module.exports.load = function(mg) {
	var Schema = mg.Schema;
	var File = new Schema({
		hres: Number,
		wres: Number,
		size: Number, // bytes
		uri: [ {
			type: String
		} ],
        md5: {
            type: String,
            trim: true
        }
	});

	/* Media param */
	var Media = new Schema(_.assign({},
    transcodingSchema(),
    {
		ddate: Date,
		ts: {
			type: Date,
			default: dateUtc
		},
		user: {
			type: Schema.Types.ObjectId,
			ref: 'userprofile',
			index: true
		},
		name: {
			type: String,
			trim: true
		},
		description: {
			type: String,
			trim: true
		},
		thumbs: [ {
			dim: String,
			uri: String,
            _id: false
		} ],
		len: Number, // seconds
		mfiles: [ File ],
        oplogs: [oplog_schema.create()],

        // where the file has been uploaded by the user
        // zencoder will grab the file at this uri
        original_uri: String,

		// stat: {
		// 	type: Number,
		// 	default: -1
		// },
		aspect_ratio: String,
 		tags: [ {
 			type: String,
			lowercase: true,
 			trim: true,
            _id: false
 		} ],
		entity: {
			type: Schema.Types.ObjectId,
			ref: 'entities'
		},

        default: {
            type: Boolean,
            default: false
        }

	}));

	Media.set('versionKey', false);

    Media.virtual('isPending').get(function() {
        return this.transcoding_status !== 3; // FINISHED
    });

	return Media;
};
