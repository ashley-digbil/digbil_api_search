// This migration remove the field 'original_event'
// for all single events. In the future, a single event
// will not have this field set. This is to make the db consistent
//
// to run this:
// `nvm use 0.11 && node --harmony deckPermission.js` dev
// (replace dev with the desired environment)
'use strict';

let Promise = require('bluebird');
let mongoose = require('mongoose');
let ObjectId = mongoose.Types.ObjectId;
let _ = require('lodash');

let argv = require('minimist')(process.argv.slice(2));
let env = argv._[0] || 'test';
console.log('Migration on environment: '+ env);

Promise.coroutine(function* () {

    let db = yield require('./connect')(env);
    let Event = db.get_collection('event');

    let evs = yield Event.find().exec();
    evs = evs.filter(function(ev) {
        return String(ev._id) === String(ev.original_event);
    });

    console.log('checking %d events', evs.length);
    // this is horribly slow but whatever
    let singleEvents = yield Promise.all(evs.map(function(ev) {
        return Event.find()
        .where('original_event', ev._id).count().exec()
        .then(function(c) {
            return c === 1 ? ev : null;
        });
    })).filter(function(ev) { return ev });

    if(singleEvents.length) {
        console.log('Removing the field original_event for %d single events', singleEvents.length);
        var singleIds = _.pluck(singleEvents, '_id').map(String);
        yield Event.update({
            _id: {$in: singleIds}
        }, {
            $unset: {original_event: 1}
        }, {multi: true}).exec();
        console.log('done');
    } else {
        console.log('nothing to do \\o/');
    }

    process.exit(0);
})();
