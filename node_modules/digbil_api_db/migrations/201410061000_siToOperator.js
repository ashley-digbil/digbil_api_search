'use strict';
var Promise = require('bluebird');

module.exports.run = function siToOperator(db, logger) {
    var Role = db.get_collection('roles');
    var User = db.get_collection('userprofile');

    var changeRoleName = Role.update({
        name: 'Systems Integrator'
    }, {
        name: 'Operator'
    }, {
        multi: true
    }).exec();

    function changeUserData() {
        return User.update({
            'entities.role_name': 'Systems Integrator'
        }, {
            'entities.$.role_name': 'Operator'
        }, {
            multi: true
        }).exec();
    }

    // the update command will only update the first item
    // with the matching name. In case a user has multiple entities
    // and all with the same name to be changed, the following hack
    // will work. (doing a full recursive search and update would
    // be way overkill)
    var changeAllUserData = changeUserData()
    .then(changeUserData)
    .then(changeUserData)
    .then(changeUserData);

    return Promise.all([changeRoleName, changeAllUserData]);
}
