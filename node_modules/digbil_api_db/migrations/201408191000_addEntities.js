'use strict';
var Promise = require('bluebird');

// add the field `entities` for all users. The array is set with
// the current user entity as the only element
module.exports.run = function run(db, logger) {
    var User = db.get_collection('userprofile');
    var Role = db.get_collection('roles');

    function getSuperAdminRole(entityId) {
        return Promise.cast(
            Role.findOne()
            .where('set_role', true)
            .where('code', 10001)
            .exec()
        );
    }

    var oldUsers = Promise.cast(User.find()
    .where('entities.0').exists(false).exec());

    return oldUsers.map(function(user) {
        if(user.entity && (user.entities && user.entities.length == 0)) {
            var role = user.role;
            if(!user.role) {
                role = Promise.cast(Role.findOne()
                .where('entity', user.entity)
                .where('code', 10005) // end user
                .exec());
            } else {
                role = Promise.resolve(role);
            }

            return role.then(function(role) {
                user.entities = [{
                    id: user.entity,
                    role: role,
                    role_name: role.name
                }];
                return Promise.promisify(user.save, user)();
            });
        }
    }).all();
}
